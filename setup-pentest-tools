#!/bin/sh

code_analysis_pkgs="netsink pychecker pyflakes pylint rats rpmlint trace"
forensics_pkgs="htop ncdu testdisk wipe"
reconnaissance_pkgs="nmap tshark tcpdump"
voip_analysis_pkgs="enumiax sipp sipvicious sipcrack sipsak smap"
live_host_identification_pkgs="hping3"
wireless_pkgs="cowpatty wavemon weplab"

menu_code_analysis () {
	code_analysis_pkgs=$(dialog --stdout                    	        \
        --title 'Code Analysis'		               				\
        --checklist 'Select the packages to install'    		        \
        0 0 0                                    			        \
	netsink      'A Network Sinkhole for Isolated Malware Analysis'      on \
   	pychecker    'A analyser for python source code'                     on \
   	pyflakes     'A passive checker of Python programs'                  on \
   	pylint       'Analyzes Python code for bugs/signs of poor quality'   on \
   	rats         'Find security related programming errors'              on \
   	rpmlint      'A tool for checking common errors in RPM packages'     on \
   	strace       'A diagnositic, instructional, and debugging tool'      on
	)
}

menu_forensics () {
        forensics_pkgs=$(dialog --stdout	                                \
        --title 'Forensics'		                                        \
        --checklist 'Select the packages to install'                            \
        0 0 0                                                                   \
	htop         'An interactive process viewer for Linux'               on \
   	ncdu         'A curses-based version of the well-known "du"'         on \
   	testdisk     'A powerful free data recovery software'		     on \
   	wipe         'Tool for securely erasing files from magnetic media'   on
	)
}

menu_reconnaissance () {
        reconnaissance_pkgs=$(dialog --stdout                                    \
        --title 'Reconnaissance'                                                 \
        --checklist 'Select the packages to install' 	                         \
        0 0 0                                                                    \
	nmap         'Network Mapper'			      on \
	tshark       'Dump and analyze network traffic'      on \
  	tcpdump      'Dump traffic on a network '            on 
	)
}

menu_voip_analysis () {
        voip_analysis_pkgs=$(dialog --stdout                                     \
        	--title 'VoIP Analysis'                                                  \
	        --checklist 'Select the packages to install'                             \
        	0 0 0                                                                    \
		enumiax		'Asterisk Exchange v2 username brute-force enumerator.' on \
		SIPp		'Traffic generator for the SIP protocol'		on \
		sipvicious	'Tools for auditing SIP based VoIP systems'		on \
		sipcrack	'A SIP protocol login cracker'				on \
		sipsak		'SIP swiss army knife'					on \
		smap		'A simple scanner for SIP enabled devices'		on
        )
}

menu_live_host_identification() {
        live_host_identification_pkgs=$(dialog --stdout                           \
	        --title 'Live Host Identification'                                        \
	        --checklist 'Select the packages to install'                              \
        	0 0 0                                                                     \
		hping3       'Send arbitrary TCP/IP packets to network hosts'  	       on 
        )
}

menu_wireless() {
	wireless_pkgs=$(dialog --stdout				\
                --title 'Wireless Tools'			\
                --checklist 'Select the packages to install'	\
                0 0 0						\
                weplab		'Analyzing WEP encryption security on wireless networks'	on \
		cowpatty	'Attacking WPA/WPA2-PSK exchanges'				on \
		wavemon		'Monitoring application for wireless network devices'		on
        )


}

pentest_install() {
	apk update -q
	apk add $wireless_pkgs \
		$live_host_identification_pkgs \
		$voip_analysis_pkgs \
		$reconnaissance_pkgs \
		code_analysis_pkgs
}

##########################################################
# The main() function starts here:
##########################################################
which dialog >> /dev/null
case "$?" in
   1)
      echo -n "The 'dialog' package is missing. Do you want to install it [y/N]? "
      read d_install
      case "$d_install" in
         Y|y) apk add dialog ;;
         *) exit ;;
      esac
esac

while : ; do
   resposta=$(dialog --stdout				\
	--title 'setup-pentest-tools' 			\
	--extra-button					\
	--extra-label	"Install"			\
	--menu 'Select the item that you want to browse'\
	0 0 0 						\
	'Code Analysis'	''				\
	Forensics	'' 				\
	'Live Host Identification'	''		\
	Reconnaissance	'' 				\
	'VoIP Analysis'	'' 				\
	Wireless	''
   )

   case "$?" in
      # 'Cancel' button was pressed
      1) 
	break
	;;
      # 'Install' button was pressed
      3) 
	pentest_install
	break
	;;
   esac

   # 'OK' button was pressed
   case "$resposta" in
      'Code Analysis') 
	menu_code_analysis
	;;
      Forensics) 
	menu_forensics
	;;
      'Reconnaissance')
        menu_reconnaissance
	;;
      'VoIP Analysis')
        menu_voip_analysis
	;;
      'Live Host Identification')
        menu_live_host_identification
	;;
      Wireless)
	menu_wireless
	;;
      *) echo "A resposta foi: $resposta" && break ;;
   esac

done
